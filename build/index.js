// Generated by CoffeeScript 1.10.0
var mergeActionsTypes, toActionsTypes, underlineToHump;

underlineToHump = function(name) {
  var words;
  words = name.split('_');
  words = words.reduce(function(result, key, index, array) {
    var keyArray;
    if (index === 0) {
      result.push(key.toLowerCase());
    } else {
      keyArray = key.toLowerCase().split('');
      keyArray[0] = keyArray[0].toUpperCase();
      result.push(keyArray.join(''));
    }
    return result;
  }, []);
  return words.join('');
};

toActionsTypes = function(typesObj) {
  var i, k, len, r, ref, type, types, v;
  types = {};
  for (k in typesObj) {
    v = typesObj[k];
    types[k.toUpperCase()] = v.toUpperCase();
  }
  typesObj = types;
  r = {
    types: typesObj,
    actions: {}
  };
  ref = Object.keys(r.types);
  for (i = 0, len = ref.length; i < len; i++) {
    type = ref[i];
    r.actions[underlineToHump(type)] = type;
  }
  return r;
};

mergeActionsTypes = function() {
  var actionsTypesArray, k, ref, v;
  actionsTypesArray = [];
  if (arguments.length === 1) {
    if (Array.isArray(arguments[0])) {
      actionsTypesArray = arguments[0];
    } else if (typeof arguments[0] === 'object') {
      ref = arguments[0];
      for (k in ref) {
        v = ref[k];
        actionsTypesArray.push(v);
      }
    } else {
      return;
    }
  } else {
    actionsTypesArray = arguments;
  }
  return actionsTypesArray.reduce(function(result, actionsTypes, index, array) {
    return {
      actions: Object.assign({}, result.actions, actionsTypes.actions),
      types: Object.assign({}, result.types, actionsTypes.types)
    };
  }, {
    actions: {},
    types: {}
  });
};

module.exports = {
  toActionsTypes: toActionsTypes,
  mergeActionsTypes: mergeActionsTypes
};
